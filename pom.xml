<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.cluster.data</groupId>
	<artifactId>warehouse</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>warehouse</name>
	<description>This project uploads files and process them to DB </description>

	<properties>
		<java.version>1.8</java.version>
		<maven.version>3.0.0</maven.version>
		<spring-boot.version>2.0.8.RELEASE</spring-boot.version>
		<node.version>v10.15.0</node.version>
		<spring-problem.version>0.25.2</spring-problem.version>
		<jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
		<problem-violations.version>0.25.2</problem-violations.version>
		<dependencies.version>2.1.1</dependencies.version>
		<npm.version>6.4.1</npm.version>
		<mapstruct.version>1.3.0.Final</mapstruct.version>
		<mongobee.version>0.13</mongobee.version>
		<maven-war-plugin.version>3.2.2</maven-war-plugin.version>
		<jib-maven-plugin.version>0.9.11</jib-maven-plugin.version>
		<frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<profile.no-liquibase />


		<!-- Plugin versions -->
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
		<maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
		<maven-war-plugin.version>3.2.2</maven-war-plugin.version>
		<jib-maven-plugin.version>0.9.11</jib-maven-plugin.version>
		<frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
		<scala-maven-plugin.version>3.4.2</scala-maven-plugin.version>
		<sonar-maven-plugin.version>3.5.0.1254</sonar-maven-plugin.version>
		<git-commit-id-plugin.version>2.2.5</git-commit-id-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
			<version>2.10.1</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hppc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-afterburner</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.mongobee</groupId>
			<artifactId>mongobee</artifactId>
			<version>0.13</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>problem-spring-web</artifactId>
			<version>${problem-violations.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>problem-violations</artifactId>
			<version>${problem-violations.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>

					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${start-class}</mainClass>
					<executable>true</executable>
					<fork>true</fork>
					<!--
                    Enable the line below to have remote debugging of your application on port 5005
                    <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
                    -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>pre-unit-tests</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
								<outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<rules>
							<requireMavenVersion>
								<message>You are running an older version of Maven. App requires at least Maven
									${maven.version}
								</message>
								<version>[${maven.version},)</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<message>You are running an incompatible version of Java. App requires JDK
									${java.version}
								</message>
								<version>[1.8,1.9)</version>
							</requireJavaVersion>
						</rules>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-idea-plugin</artifactId>
					<version>${maven-idea-plugin.version}</version>
					<configuration>
						<exclude>node_modules</exclude>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<executions>
						<execution>
							<id>default-resources</id>
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/classes</outputDirectory>
								<useDefaultDelimiters>false</useDefaultDelimiters>
								<delimiters>
									<delimiter>#</delimiter>
								</delimiters>
								<resources>
									<resource>
										<directory>src/main/resources/</directory>
										<filtering>true</filtering>
										<includes>
											<include>config/*.yml</include>
										</includes>
									</resource>
									<resource>
										<directory>src/main/resources/</directory>
										<filtering>false</filtering>
										<excludes>
											<exclude>config/*.yml</exclude>
										</excludes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>jib-www-resources</id>
							<phase>verify</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/classes/static/</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/www</directory>
										<filtering>false</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- Force alphabetical order to have a reproducible build -->
						<runOrder>alphabetical</runOrder>
						<!-- Fixes a bug which will be solved in next version after 2.22.1 then this can be removed -->
						<!-- see: https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
						<useSystemClassLoader>false</useSystemClassLoader>
						<outputDirectory>${sonar.junit.reportsPath}</outputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>${scala-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>compile</id>
							<phase>compile</phase>
							<goals>
								<goal>add-source</goal>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>test-compile</id>
							<phase>test-compile</phase>
							<goals>
								<goal>add-source</goal>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<recompileMode>incremental</recompileMode>
						<verbose>true</verbose>
						<scalaVersion>${scala.version}</scalaVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>webpack</id>
			<activation>
				<file>
					<missing>${basedir}/target/www/app/main.bundle.js</missing>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<npmVersion>${npm.version}</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
							</execution>
							<execution>
								<id>webpack build dev</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>run webpack:build</arguments>
									<npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<warSourceDirectory>target/www/</warSourceDirectory>
							<webResources>
								<resource>
									<directory>src/main/webapp</directory>
									<includes>
										<include>WEB-INF/**</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- default Spring profiles -->
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<warSourceDirectory>target/www/</warSourceDirectory>
							<webResources>
								<resource>
									<directory>src/main/webapp</directory>
									<includes>
										<include>WEB-INF/**</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- default Spring profiles -->
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<filesets>
								<fileset>
									<directory>target/www/</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<warSourceDirectory>target/www/</warSourceDirectory>
							<webResources>
								<resource>
									<directory>src/main/webapp</directory>
									<includes>
										<include>WEB-INF/**</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<mainClass>${start-class}</mainClass>
							<executable>true</executable>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-info</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<npmVersion>${npm.version}</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>webpack build test</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>test</phase>
								<configuration>
									<arguments>run webpack:test</arguments>
									<npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
								</configuration>
							</execution>
							<execution>
								<id>webpack build prod</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>run webpack:prod</arguments>
									<npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- default Spring profiles -->
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
	</profiles>

</project>
